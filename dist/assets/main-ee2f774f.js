import"./loadHeaderFooter-263ae45f.js";let n=!0;document.addEventListener("DOMContentLoaded",()=>{const o=document.getElementById("city-name"),s=document.getElementById("temperature"),i=document.getElementById("forecast-container"),u=document.querySelector(".search-container input"),p=document.querySelector(".suggestions-container"),g=document.getElementById("unit-toggle"),f="0066e3596484e7ae608d23fe3959f109",T="e910cc3969msh71ab17d4f77c665p1b6bfajsn5ecd6ff742cf",y=JSON.parse(localStorage.getItem("loggedInUser"));if(y){const t=localStorage.getItem(`${y.username}-unit`);t&&(n=t==="metric",g.textContent=`Switch to °${n?"F":"C"}`)}else{const t=localStorage.getItem("unit");t&&(n=t==="metric",g.textContent=`Switch to °${n?"F":"C"}`)}const I=async(t,e)=>{try{const a=n?"metric":"imperial",c=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${e}&units=${a}&appid=${f}`);if(!c.ok)throw new Error(`HTTP error! status: ${c.status}`);const r=await c.json(),D=r.name,M=r.sys.country,B=r.main.temp,H=r.weather[0].icon,m=r.weather[0].description,L=r.wind.speed,v=r.main.humidity,b=r.main.pressure,P=r.visibility,U=r.clouds.all;o.textContent=`Temperature in ${D}, ${M}`,s.innerHTML=`<img src="http://openweathermap.org/img/wn/${H}@2x.png" alt="${m}">${B} °${n?"C":"F"}`,document.getElementById("weather-description").textContent=`${m.charAt(0).toUpperCase()+m.slice(1)}`,document.getElementById("wind-speed").textContent=`Wind Speed: ${L} ${n?"m/s":"mph"}`,document.getElementById("humidity").textContent=`Humidity: ${v}%`,document.getElementById("pressure").textContent=`Pressure: ${b} hPa`,document.getElementById("visibility").textContent=`Visibility: ${P} m`,document.getElementById("cloudiness").textContent=`Cloudiness: ${U}%`;const $=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${t}&lon=${e}&units=${a}&appid=${f}`);if(!$.ok)throw new Error(`HTTP error! status: ${$.status}`);const S=(await $.json()).list.reduce((d,l)=>{const h=new Date(l.dt_txt).toDateString();return d[h]||(d[h]=[]),d[h].push(l.main.temp_min,l.main.temp_max),d},{}),F=Object.keys(S).slice(0,5),O=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],A=["January","February","March","April","May","June","July","August","September","October","November","December"];i.innerHTML="",F.forEach(d=>{const l=S[d],h=Math.min(...l),j=Math.max(...l),C=new Date(d),N=O[C.getUTCDay()],W=A[C.getUTCMonth()],J=`${N}, ${W} ${C.getUTCDate()}`,E=document.createElement("div");E.classList.add("forecast-day"),E.innerHTML=`
                    <p>${J}</p>
                    <img src="http://openweathermap.org/img/wn/${r.weather[0].icon}@2x.png" alt="${m}">
                    <p>${m.charAt(0).toUpperCase()+m.slice(1)}</p>
                    <p>Min: ${h} °${n?"C":"F"}</p>
                    <p>Max: ${j} °${n?"C":"F"}</p>
                    <p>Wind Speed: ${L} ${n?"m/s":"mph"}</p>
                    <p>Humidity: ${v}%</p>
                    <p>Pressure: ${b} hPa</p>
                `,i.appendChild(E)})}catch(a){console.error("Error fetching the weather data:",a),o.textContent="Error retrieving weather data.",s.textContent=""}},w=async t=>{try{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${t}&appid=${f}`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const a=await e.json(),{lat:c,lon:r}=a.coord;await I(c,r)}catch(e){console.error("Error fetching the weather data:",e),o.textContent="Error retrieving weather data.",s.textContent=""}},x=async t=>{try{const e=await fetch(`https://wft-geo-db.p.rapidapi.com/v1/geo/cities?namePrefix=${t}`,{method:"GET",headers:{"X-RapidAPI-Key":T,"X-RapidAPI-Host":"wft-geo-db.p.rapidapi.com"}});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return(await e.json()).data.map(c=>`${c.city}, ${c.country}`)}catch(e){return console.error("Error fetching city suggestions:",e),[]}},k=t=>{p.innerHTML="",t.forEach(e=>{const a=document.createElement("div");a.classList.add("suggestion"),a.textContent=e,a.addEventListener("click",()=>{u.value=e,w(e),p.innerHTML=""}),p.appendChild(a)})};navigator.geolocation?navigator.geolocation.getCurrentPosition(async t=>{const{latitude:e,longitude:a}=t.coords;await I(e,a)},()=>{o.textContent="Unable to retrieve your location."}):o.textContent="Geolocation is not supported by this browser.",u.addEventListener("input",async()=>{const t=u.value.trim();if(t){const e=await x(t);k(e)}else p.innerHTML=""}),u.addEventListener("keypress",t=>{if(t.key==="Enter"){const e=u.value.trim();e&&(w(e),p.innerHTML="")}}),g.addEventListener("click",()=>{n=!n,g.textContent=`Switch to °${n?"F":"C"}`;const t=o.textContent.split(" ")[2];t&&w(t),y&&localStorage.setItem(`${y.username}-unit`,n?"metric":"imperial"),localStorage.setItem("unit",n?"metric":"imperial")})});document.addEventListener("DOMContentLoaded",()=>{const o=document.getElementById("toggle"),s=JSON.parse(localStorage.getItem("loggedInUser"));if(s){const i=localStorage.getItem(`${s.username}-theme`);i?(document.body.classList.add(i),o.checked=i==="dark-mode"):(document.body.classList.add("light-mode"),o.checked=!1)}else{const i=localStorage.getItem("theme");i?(document.body.classList.add(i),o.checked=i==="dark-mode"):(document.body.classList.add("light-mode"),o.checked=!1)}o.addEventListener("change",()=>{o.checked?(document.body.classList.remove("light-mode"),document.body.classList.add("dark-mode"),s&&localStorage.setItem(`${s.username}-theme`,"dark-mode"),localStorage.setItem("theme","dark-mode")):(document.body.classList.remove("dark-mode"),document.body.classList.add("light-mode"),s&&localStorage.setItem(`${s.username}-theme`,"light-mode"),localStorage.setItem("theme","light-mode"))})});document.addEventListener("DOMContentLoaded",()=>{if(!localStorage.getItem("hasVisited")){const s=document.getElementById("welcome-banner");s.classList.remove("hidden"),localStorage.setItem("hasVisited","true"),document.getElementById("close-banner").addEventListener("click",()=>{s.style.display="none"})}});
