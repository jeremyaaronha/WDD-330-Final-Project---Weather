import"./loadHeaderFooter-abab82ae.js";console.log("Weather App is running!");const te=n=>n.charAt(0).toUpperCase()+n.slice(1);let o=!0;document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("city-name"),a=document.getElementById("temperature"),r=document.getElementById("weather-description"),y=document.getElementById("wind-speed"),w=document.getElementById("humidity"),k=document.getElementById("pressure"),D=document.getElementById("visibility"),M=document.getElementById("cloudiness"),b=document.getElementById("forecast-container"),l=document.querySelector(".search-container input"),p=document.querySelector(".suggestions-container"),h=document.getElementById("unit-toggle"),f="0066e3596484e7ae608d23fe3959f109",g=JSON.parse(localStorage.getItem("loggedInUser"));if(g){const t=localStorage.getItem(`${g.username}-unit`);t&&(o=t==="metric",h.textContent=`Switch to °${o?"F":"C"}`)}else{const t=localStorage.getItem("unit");t&&(o=t==="metric",h.textContent=`Switch to °${o?"F":"C"}`)}const x=async(t,e)=>{try{const s=o?"metric":"imperial",d=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${e}&units=${s}&appid=${f}`);if(!d.ok)throw new Error(`HTTP error! status: ${d.status}`);const i=await d.json(),P=i.name,U=i.sys.country,F=i.main.temp,L=i.weather[0].description.charAt(0).toUpperCase()+i.weather[0].description.slice(1),O=i.weather[0].icon,A=i.wind.speed,W=i.main.humidity,j=i.main.pressure,N=i.visibility/1e3,V=i.clouds.all;n.textContent=`Temperature in ${P}, ${U}`,a.innerHTML=`<img src="http://openweathermap.org/img/wn/${O}@2x.png" alt="${L}">${F} °${o?"C":"F"}`,r.textContent=`${L}`,y.textContent=`Wind Speed: ${A} ${o?"m/s":"mph"}`,w.textContent=`Humidity: ${W}%`,k.textContent=`Pressure: ${j} hPa`,D.textContent=`Visibility: ${N} km`,M.textContent=`Cloudiness: ${V}%`;const C=await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${t}&lon=${e}&units=${s}&appid=${f}`);if(!C.ok)throw new Error(`HTTP error! status: ${C.status}`);const S=(await C.json()).list.reduce((m,c)=>{const u=new Date(c.dt_txt).toDateString();return m[u]||(m[u]=[]),m[u].push(c),m},{}),J=Object.keys(S).slice(0,5),R=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],q=["January","February","March","April","May","June","July","August","September","October","November","December"];b.innerHTML="",J.forEach(m=>{const c=S[m],u=Math.min(...c.map(v=>v.main.temp_min)),_=Math.max(...c.map(v=>v.main.temp_max)),T=c[0].weather[0].description,G=c[0].wind.speed,K=c[0].weather[0].icon,X=c[0].main.pressure,z=c[0].visibility/1e3,Q=c[0].clouds.all,E=new Date(m),Y=R[E.getUTCDay()],Z=q[E.getUTCMonth()],ee=`${Y}, ${Z} ${E.getUTCDate()}`,I=document.createElement("div");I.classList.add("forecast-day"),I.innerHTML=`
                <p id="day">${ee}</p>
                <img id="forecast-img" src="https://openweathermap.org/img/wn/${K}@2x.png" alt="${T}">
                <p id="temperature-description">${te(T)}</p>
                <p id="min-temperature">Min: ${u} °${o?"C":"F"}</p>
                <p id="max-temperature">Max: ${_} °${o?"C":"F"}</p>
                <p id="wind-speed">Wind Speed: ${G} ${o?"m/s":"mph"}</p>
                <p id="pressure">Pressure: ${X} hPa</p>
                <p id="visibility">Visibility: ${z} km</p>
                <p id="cloudiness">Cloudiness: ${Q}%</p>
                `,b.appendChild(I)})}catch(s){console.error("Error fetching the weather data:",s),n.textContent="Error retrieving weather data.",a.textContent="",r.textContent="",y.textContent="",w.textContent=""}},$=async t=>{try{const e=await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${t}&appid=${f}`);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const s=await e.json(),{lat:d,lon:i}=s.coord;await x(d,i)}catch(e){console.error("Error fetching the weather data:",e),n.textContent="Error retrieving weather data.",a.textContent="",r.textContent="",y.textContent="",w.textContent=""}},B=async t=>{try{const e=await fetch(`https://wft-geo-db.p.rapidapi.com/v1/geo/cities?namePrefix=${t}`,{method:"GET",headers:{"X-RapidAPI-Key":"e910cc3969msh71ab17d4f77c665p1b6bfajsn5ecd6ff742cf","X-RapidAPI-Host":"wft-geo-db.p.rapidapi.com"}});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return(await e.json()).data.map(d=>`${d.city}, ${d.country}`)}catch(e){return console.error("Error fetching city suggestions:",e),[]}},H=t=>{p.innerHTML="",t.forEach(e=>{const s=document.createElement("div");s.classList.add("suggestion"),s.textContent=e,s.addEventListener("click",()=>{l.value=e,$(e),p.innerHTML=""}),p.appendChild(s)})};navigator.geolocation?navigator.geolocation.getCurrentPosition(async t=>{const{latitude:e,longitude:s}=t.coords;await x(e,s)},()=>{n.textContent="Unable to retrieve your location."}):n.textContent="Geolocation is not supported by this browser.",l.addEventListener("input",async()=>{const t=l.value.trim();if(t){const e=await B(t);H(e)}else p.innerHTML=""}),l.addEventListener("keypress",t=>{if(t.key==="Enter"){const e=l.value.trim();e&&($(e),p.innerHTML="")}}),h.addEventListener("click",()=>{o=!o,h.textContent=`Switch to °${o?"F":"C"}`;const t=n.textContent.split(" ")[2];t&&$(t),g&&localStorage.setItem(`${g.username}-unit`,o?"metric":"imperial"),localStorage.setItem("unit",o?"metric":"imperial")})});document.addEventListener("DOMContentLoaded",()=>{const n=document.getElementById("toggle"),a=JSON.parse(localStorage.getItem("loggedInUser"));if(a){const r=localStorage.getItem(`${a.username}-theme`);r?(document.body.classList.add(r),n.checked=r==="dark-mode"):(document.body.classList.add("light-mode"),n.checked=!1)}else{const r=localStorage.getItem("theme");r?(document.body.classList.add(r),n.checked=r==="dark-mode"):(document.body.classList.add("light-mode"),n.checked=!1)}n.addEventListener("change",()=>{n.checked?(document.body.classList.remove("light-mode"),document.body.classList.add("dark-mode"),a&&localStorage.setItem(`${a.username}-theme`,"dark-mode"),localStorage.setItem("theme","dark-mode")):(document.body.classList.remove("dark-mode"),document.body.classList.add("light-mode"),a&&localStorage.setItem(`${a.username}-theme`,"light-mode"),localStorage.setItem("theme","light-mode"))})});document.addEventListener("DOMContentLoaded",()=>{if(!localStorage.getItem("hasVisited")){const a=document.getElementById("welcome-banner");a.classList.remove("hidden"),localStorage.setItem("hasVisited","true"),document.getElementById("close-banner").addEventListener("click",()=>{a.style.display="none"})}});
